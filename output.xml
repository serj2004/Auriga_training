<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.9 (Python 3.9.5 on win32)" generated="20210820 00:01:40.359">
<suite id="s1" name="Group Scenarios" source="C:\Users\1\PycharmProjects\Auriga_training\rf\group_scenarios.robot">
<kw name="Init Fixtures" library="rf.AddressBook" type="setup">
<status status="PASS" starttime="20210820 00:01:40.680" endtime="20210820 00:01:51.387"></status>
</kw>
<test id="s1-t1" name="Add new group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20210820 00:01:51.392" level="INFO">${old_list} = [265:123, 266:nameg1kwheaderff%Q(@7&gt;NfooterEnplJkngJ, 267:nameCy)Vheader%9t%T8e|(footer_=, 269:New New group 1New headerNew footer, 270:nameTt_headersG**:asfooterrK@Z, 271:123, 272:nameg1kwheaderff%Q(...</msg>
<status status="PASS" starttime="20210820 00:01:51.388" endtime="20210820 00:01:51.392"></status>
</kw>
<kw name="New Group" library="rf.AddressBook">
<arguments>
<arg>name1</arg>
<arg>header1</arg>
<arg>footer1</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20210820 00:01:51.393" level="INFO">${group} = None:name1header1footer1</msg>
<status status="PASS" starttime="20210820 00:01:51.393" endtime="20210820 00:01:51.393"></status>
</kw>
<kw name="Create Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20210820 00:01:51.394" endtime="20210820 00:01:53.319"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20210820 00:01:53.326" level="INFO">${new_list} = [265:123, 266:nameg1kwheaderff%Q(@7&gt;NfooterEnplJkngJ, 267:nameCy)Vheader%9t%T8e|(footer_=, 269:New New group 1New headerNew footer, 270:nameTt_headersG**:asfooterrK@Z, 271:123, 272:nameg1kwheaderff%Q(...</msg>
<status status="PASS" starttime="20210820 00:01:53.320" endtime="20210820 00:01:53.326"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20210820 00:01:53.327" endtime="20210820 00:01:53.327"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20210820 00:01:53.328" endtime="20210820 00:01:53.328"></status>
</kw>
<status status="PASS" starttime="20210820 00:01:51.387" endtime="20210820 00:01:53.330" critical="yes"></status>
</test>
<test id="s1-t2" name="Delete group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20210820 00:01:53.339" level="INFO">${old_list} = [265:123, 266:nameg1kwheaderff%Q(@7&gt;NfooterEnplJkngJ, 267:nameCy)Vheader%9t%T8e|(footer_=, 269:New New group 1New headerNew footer, 270:nameTt_headersG**:asfooterrK@Z, 271:123, 272:nameg1kwheaderff%Q(...</msg>
<status status="PASS" starttime="20210820 00:01:53.335" endtime="20210820 00:01:53.339"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<assign>
<var>${len}</var>
</assign>
<msg timestamp="20210820 00:01:53.340" level="INFO">Length is 27</msg>
<msg timestamp="20210820 00:01:53.340" level="INFO">${len} = 27</msg>
<status status="PASS" starttime="20210820 00:01:53.340" endtime="20210820 00:01:53.340"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.randrange(${len})</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20210820 00:01:53.352" level="INFO">${index} = 22</msg>
<status status="PASS" starttime="20210820 00:01:53.340" endtime="20210820 00:01:53.352"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20210820 00:01:53.353" level="INFO">${group} = 289:name1header1footer1</msg>
<status status="PASS" starttime="20210820 00:01:53.353" endtime="20210820 00:01:53.353"></status>
</kw>
<kw name="Delete Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20210820 00:01:53.354" endtime="20210820 00:01:54.089"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20210820 00:01:54.096" level="INFO">${new_list} = [265:123, 266:nameg1kwheaderff%Q(@7&gt;NfooterEnplJkngJ, 267:nameCy)Vheader%9t%T8e|(footer_=, 269:New New group 1New headerNew footer, 270:nameTt_headersG**:asfooterrK@Z, 271:123, 272:nameg1kwheaderff%Q(...</msg>
<status status="PASS" starttime="20210820 00:01:54.093" endtime="20210820 00:01:54.096"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20210820 00:01:54.097" endtime="20210820 00:01:54.097"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20210820 00:01:54.098" endtime="20210820 00:01:54.100"></status>
</kw>
<status status="PASS" starttime="20210820 00:01:53.333" endtime="20210820 00:01:54.100" critical="yes"></status>
</test>
<kw name="Destroy Fixtures" library="rf.AddressBook" type="teardown">
<status status="PASS" starttime="20210820 00:01:54.104" endtime="20210820 00:01:57.898"></status>
</kw>
<status status="PASS" starttime="20210820 00:01:40.362" endtime="20210820 00:01:57.898"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="Group Scenarios">Group Scenarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
